// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: user_api.proto

package user_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Sex int32

const (
	Sex_male   Sex = 0
	Sex_female Sex = 1
)

// Enum value maps for Sex.
var (
	Sex_name = map[int32]string{
		0: "male",
		1: "female",
	}
	Sex_value = map[string]int32{
		"male":   0,
		"female": 1,
	}
)

func (x Sex) Enum() *Sex {
	p := new(Sex)
	*p = x
	return p
}

func (x Sex) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sex) Descriptor() protoreflect.EnumDescriptor {
	return file_user_api_proto_enumTypes[0].Descriptor()
}

func (Sex) Type() protoreflect.EnumType {
	return &file_user_api_proto_enumTypes[0]
}

func (x Sex) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sex.Descriptor instead.
func (Sex) EnumDescriptor() ([]byte, []int) {
	return file_user_api_proto_rawDescGZIP(), []int{0}
}

type SocialNet int32

const (
	SocialNet_telegram SocialNet = 0
)

// Enum value maps for SocialNet.
var (
	SocialNet_name = map[int32]string{
		0: "telegram",
	}
	SocialNet_value = map[string]int32{
		"telegram": 0,
	}
)

func (x SocialNet) Enum() *SocialNet {
	p := new(SocialNet)
	*p = x
	return p
}

func (x SocialNet) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SocialNet) Descriptor() protoreflect.EnumDescriptor {
	return file_user_api_proto_enumTypes[1].Descriptor()
}

func (SocialNet) Type() protoreflect.EnumType {
	return &file_user_api_proto_enumTypes[1]
}

func (x SocialNet) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SocialNet.Descriptor instead.
func (SocialNet) EnumDescriptor() ([]byte, []int) {
	return file_user_api_proto_rawDescGZIP(), []int{1}
}

type UserSocialID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Socialnet SocialNet `protobuf:"varint,1,opt,name=socialnet,proto3,enum=user_api.SocialNet" json:"socialnet,omitempty"`
	Socialid  string    `protobuf:"bytes,2,opt,name=socialid,proto3" json:"socialid,omitempty"`
}

func (x *UserSocialID) Reset() {
	*x = UserSocialID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSocialID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSocialID) ProtoMessage() {}

func (x *UserSocialID) ProtoReflect() protoreflect.Message {
	mi := &file_user_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSocialID.ProtoReflect.Descriptor instead.
func (*UserSocialID) Descriptor() ([]byte, []int) {
	return file_user_api_proto_rawDescGZIP(), []int{0}
}

func (x *UserSocialID) GetSocialnet() SocialNet {
	if x != nil {
		return x.Socialnet
	}
	return SocialNet_telegram
}

func (x *UserSocialID) GetSocialid() string {
	if x != nil {
		return x.Socialid
	}
	return ""
}

type UserWordsVector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Wb  []byte `protobuf:"bytes,2,opt,name=wb,proto3" json:"wb,omitempty"`
}

func (x *UserWordsVector) Reset() {
	*x = UserWordsVector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserWordsVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserWordsVector) ProtoMessage() {}

func (x *UserWordsVector) ProtoReflect() protoreflect.Message {
	mi := &file_user_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserWordsVector.ProtoReflect.Descriptor instead.
func (*UserWordsVector) Descriptor() ([]byte, []int) {
	return file_user_api_proto_rawDescGZIP(), []int{1}
}

func (x *UserWordsVector) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserWordsVector) GetWb() []byte {
	if x != nil {
		return x.Wb
	}
	return nil
}

type UserAdditonalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  uint64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Age  *uint32 `protobuf:"varint,2,opt,name=age,proto3,oneof" json:"age,omitempty"`
	Sex  *Sex    `protobuf:"varint,3,opt,name=sex,proto3,enum=user_api.Sex,oneof" json:"sex,omitempty"`
	City *uint64 `protobuf:"varint,4,opt,name=city,proto3,oneof" json:"city,omitempty"`
}

func (x *UserAdditonalInfo) Reset() {
	*x = UserAdditonalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAdditonalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAdditonalInfo) ProtoMessage() {}

func (x *UserAdditonalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAdditonalInfo.ProtoReflect.Descriptor instead.
func (*UserAdditonalInfo) Descriptor() ([]byte, []int) {
	return file_user_api_proto_rawDescGZIP(), []int{2}
}

func (x *UserAdditonalInfo) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserAdditonalInfo) GetAge() uint32 {
	if x != nil && x.Age != nil {
		return *x.Age
	}
	return 0
}

func (x *UserAdditonalInfo) GetSex() Sex {
	if x != nil && x.Sex != nil {
		return *x.Sex
	}
	return Sex_male
}

func (x *UserAdditonalInfo) GetCity() uint64 {
	if x != nil && x.City != nil {
		return *x.City
	}
	return 0
}

type UserAvatar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// Types that are assignable to Image:
	//
	//	*UserAvatar_ImageUrl
	//	*UserAvatar_ImageData
	Image isUserAvatar_Image `protobuf_oneof:"image"`
}

func (x *UserAvatar) Reset() {
	*x = UserAvatar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAvatar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAvatar) ProtoMessage() {}

func (x *UserAvatar) ProtoReflect() protoreflect.Message {
	mi := &file_user_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAvatar.ProtoReflect.Descriptor instead.
func (*UserAvatar) Descriptor() ([]byte, []int) {
	return file_user_api_proto_rawDescGZIP(), []int{3}
}

func (x *UserAvatar) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (m *UserAvatar) GetImage() isUserAvatar_Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (x *UserAvatar) GetImageUrl() string {
	if x, ok := x.GetImage().(*UserAvatar_ImageUrl); ok {
		return x.ImageUrl
	}
	return ""
}

func (x *UserAvatar) GetImageData() []byte {
	if x, ok := x.GetImage().(*UserAvatar_ImageData); ok {
		return x.ImageData
	}
	return nil
}

type isUserAvatar_Image interface {
	isUserAvatar_Image()
}

type UserAvatar_ImageUrl struct {
	ImageUrl string `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3,oneof"`
}

type UserAvatar_ImageData struct {
	ImageData []byte `protobuf:"bytes,3,opt,name=image_data,json=imageData,proto3,oneof"`
}

func (*UserAvatar_ImageUrl) isUserAvatar_Image() {}

func (*UserAvatar_ImageData) isUserAvatar_Image() {}

var File_user_api_proto protoreflect.FileDescriptor

var file_user_api_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5d, 0x0a, 0x0c, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x31, 0x0a, 0x09, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4e,
	0x65, 0x74, 0x52, 0x09, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x0f, 0x55, 0x73, 0x65,
	0x72, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x77, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x77, 0x62, 0x22, 0x94,
	0x01, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x69, 0x74, 0x6f, 0x6e, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x03, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x03, 0x73, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x78, 0x48, 0x01, 0x52, 0x03, 0x73, 0x65, 0x78,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x48, 0x02, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x61, 0x67, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x65, 0x78, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x63, 0x69, 0x74, 0x79, 0x22, 0x67, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x07, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2a, 0x1b,
	0x0a, 0x03, 0x53, 0x65, 0x78, 0x12, 0x08, 0x0a, 0x04, 0x6d, 0x61, 0x6c, 0x65, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x66, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x10, 0x01, 0x2a, 0x19, 0x0a, 0x09, 0x53,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x12, 0x0c, 0x0a, 0x08, 0x74, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x10, 0x00, 0x32, 0xfc, 0x05, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x50, 0x49, 0x12, 0x4c, 0x0a, 0x14, 0x69, 0x6e, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x49, 0x44, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x53, 0x0a, 0x15, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4b, 0x0a, 0x0d, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x73, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x4c, 0x0a, 0x11, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x6f, 0x72,
	0x64, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x48, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x69, 0x74, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x73, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x48, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x1b, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43, 0x0a, 0x0d, 0x67, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x49,
	0x0a, 0x0d, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x73, 0x47, 0x6f, 0x6f, 0x64, 0x12,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x67, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x12,
	0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x14, 0x5a, 0x12, 0x2e, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_user_api_proto_rawDescOnce sync.Once
	file_user_api_proto_rawDescData = file_user_api_proto_rawDesc
)

func file_user_api_proto_rawDescGZIP() []byte {
	file_user_api_proto_rawDescOnce.Do(func() {
		file_user_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_api_proto_rawDescData)
	})
	return file_user_api_proto_rawDescData
}

var file_user_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_user_api_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_user_api_proto_goTypes = []interface{}{
	(Sex)(0),                       // 0: user_api.Sex
	(SocialNet)(0),                 // 1: user_api.SocialNet
	(*UserSocialID)(nil),           // 2: user_api.UserSocialID
	(*UserWordsVector)(nil),        // 3: user_api.UserWordsVector
	(*UserAdditonalInfo)(nil),      // 4: user_api.UserAdditonalInfo
	(*UserAvatar)(nil),             // 5: user_api.UserAvatar
	(*wrapperspb.UInt64Value)(nil), // 6: google.protobuf.UInt64Value
	(*wrapperspb.BoolValue)(nil),   // 7: google.protobuf.BoolValue
}
var file_user_api_proto_depIdxs = []int32{
	1,  // 0: user_api.UserSocialID.socialnet:type_name -> user_api.SocialNet
	0,  // 1: user_api.UserAdditonalInfo.sex:type_name -> user_api.Sex
	2,  // 2: user_api.UserAPI.initUserRegistration:input_type -> user_api.UserSocialID
	6,  // 3: user_api.UserAPI.finishUserRegistraton:input_type -> google.protobuf.UInt64Value
	6,  // 4: user_api.UserAPI.setUserIsGood:input_type -> google.protobuf.UInt64Value
	3,  // 5: user_api.UserAPI.setUserWordVector:input_type -> user_api.UserWordsVector
	4,  // 6: user_api.UserAPI.setUserInfo:input_type -> user_api.UserAdditonalInfo
	5,  // 7: user_api.UserAPI.setUserAvatar:input_type -> user_api.UserAvatar
	6,  // 8: user_api.UserAPI.getUserInfo:input_type -> google.protobuf.UInt64Value
	6,  // 9: user_api.UserAPI.getUserAvatar:input_type -> google.protobuf.UInt64Value
	6,  // 10: user_api.UserAPI.getUserIsGood:input_type -> google.protobuf.UInt64Value
	2,  // 11: user_api.UserAPI.getUserBySocialNet:input_type -> user_api.UserSocialID
	6,  // 12: user_api.UserAPI.initUserRegistration:output_type -> google.protobuf.UInt64Value
	6,  // 13: user_api.UserAPI.finishUserRegistraton:output_type -> google.protobuf.UInt64Value
	6,  // 14: user_api.UserAPI.setUserIsGood:output_type -> google.protobuf.UInt64Value
	6,  // 15: user_api.UserAPI.setUserWordVector:output_type -> google.protobuf.UInt64Value
	6,  // 16: user_api.UserAPI.setUserInfo:output_type -> google.protobuf.UInt64Value
	6,  // 17: user_api.UserAPI.setUserAvatar:output_type -> google.protobuf.UInt64Value
	4,  // 18: user_api.UserAPI.getUserInfo:output_type -> user_api.UserAdditonalInfo
	5,  // 19: user_api.UserAPI.getUserAvatar:output_type -> user_api.UserAvatar
	7,  // 20: user_api.UserAPI.getUserIsGood:output_type -> google.protobuf.BoolValue
	6,  // 21: user_api.UserAPI.getUserBySocialNet:output_type -> google.protobuf.UInt64Value
	12, // [12:22] is the sub-list for method output_type
	2,  // [2:12] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_user_api_proto_init() }
func file_user_api_proto_init() {
	if File_user_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSocialID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserWordsVector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAdditonalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAvatar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_user_api_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_user_api_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*UserAvatar_ImageUrl)(nil),
		(*UserAvatar_ImageData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_api_proto_goTypes,
		DependencyIndexes: file_user_api_proto_depIdxs,
		EnumInfos:         file_user_api_proto_enumTypes,
		MessageInfos:      file_user_api_proto_msgTypes,
	}.Build()
	File_user_api_proto = out.File
	file_user_api_proto_rawDesc = nil
	file_user_api_proto_goTypes = nil
	file_user_api_proto_depIdxs = nil
}
