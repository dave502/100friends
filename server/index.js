import { ApolloServer } from '@apollo/server';
import { startStandaloneServer } from '@apollo/server/standalone';
import { Neo4jGraphQL } from "@neo4j/graphql";
import neo4j from "neo4j-driver";
import { readFileSync } from 'fs';


const typeDefs = readFileSync('./schema.graphql', { encoding: 'utf-8' });

const driver = neo4j.driver(
  "bolt://localhost:7687",
  neo4j.auth.basic(process.env.NEO4_USER, process.env.NEO4_PASS)
);

// –ü–µ—Ä–µ–¥–∞—á–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π —Ç–∏–ø–æ–≤ GraphQL –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ë–î –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ Neo4jGraphQL
const neoSchema = new Neo4jGraphQL({ typeDefs, driver });

const server = new ApolloServer({
  schema: await neoSchema.getSchema(),
});

const { url } = await startStandaloneServer(server, {
  context: async ({ req }) => ({ req }),
  listen: { port: 4000 },
});

console.log(`üöÄ Server ready at ${url}`);



    
// const ApolloServer = require('apollo-server');
// // –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ —Å–µ—Ä–≤–µ—Ä–∞
// const server = new ApolloServer({
//     typeDefs, // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞—à–∏—Ö —Ç–∏–ø–æ–≤
//     resolvers, // –ù–∞—à–∏ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
//     context: { db } // db ‚Äì —ç—Ç–æ –Ω–∞—à —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–∞–Ω–Ω—ã—Ö, –≤–Ω–µ–¥—Ä–µ–Ω–Ω—ã–π –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç. –≠—Ç–æ—Ç –æ–±—ä–µ–∫—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –∫–∞–∂–¥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
// });

// const { url } = await startStandaloneServer(server, {
//   listen: { port: 4000 },
// });
// console.log(`üöÄ  Server ready at: ${url}`);